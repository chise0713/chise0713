#!/bin/bash
ssh(){	
	if [[ -z $@ ]];then
		/usr/bin/ssh
		return $?
	elif printf -- "$@" | grep -E '(-l|--list)' >/dev/null ;then
		cat ~/.ssh/config
		return 0
	elif printf -- "$@" | grep -oP '(-n)' >/dev/null;then
		/usr/bin/ssh $(printf -- "$@"|sed 's/-n//')
		return 0
	fi
	IFS=@
	read -a parts <<< "$@"
	IFS=
	REMOTE_USER=${parts[0]}
	REMOTE_HOST=${parts[1]}
	if grep -oP "$1" ~/.ssh/config >/dev/null;then
		echo "$1"
		CONNECT="$1"
	else
		if [[ -z $REMOTE_HOST ]];then
			echo "No Host"
			return 1
		fi
		CONNECT="$REMOTE_USER@$REMOTE_HOST"
		echo "$CONNECT"
	fi
	TIMES=0
	while true;do
		[[ -d /mnt/ssh$TIMES/dev ]] && ((TIMES++)) && continue
		! [[ -d /mnt/ssh$TIMES ]] && sudo mkdir /mnt/ssh$TIMES 
		sudo sshfs "$CONNECT":/ /mnt/ssh$TIMES -F ~/.ssh/config -o allow_other -o IdentityFile=~/.ssh/id_ed25519
		break
	done
	/usr/bin/ssh "$CONNECT"
	if [[ -d /mnt/ssh$TIMES/dev ]];then
		sleep 0.1
		UTIMES=0
		while true;do
			((UTIMES++))
			sudo umount /mnt/ssh$TIMES && sudo rm /mnt/ssh$TIMES -rf
			[[ $? == 0 ]] && break
			[[ $? == 32 ]] && break
			echo "UTIMES=$UTIMES;?=$?"
			[[ $UTIMES == 10 ]] && break
			sleep 1
		done
	fi
}
